// # Start creating page items
// ----------------------------

var pageItemBookTitleObject;
var pageItemImageObject;
var pageItemTitleObject;
var pageItemDateObject;
var pageItemDetail;
var pageItemAuthorObject;
var pageItemImagePath;
var pageItemPath;
var bookDataFilePath;
var pageItemPageNumberRight, pageItemPageNumberLeft;
var setColor, colorGray;
var checkExistsDetailLeft, checkExistsDetailRight;
var i, root, pageItemPositionCurrent, pageItemCurrentObject;


var pageLeft = {
    pageItemPageNumberLeftY1: "4.75",
    pageItemPageNumberLeftX1: "4.25",
    pageItemPageNumberLeftY2: "9.75",
    pageItemPageNumberLeftX2: "11.95",
    pageItemBookTitleLeftObjectY1: "3",
    pageItemBookTitleLeftObjectX1: "12",
    pageItemBookTitleLeftObjectY2: "8",
    pageItemBookTitleLeftObjectX2: "139.75",
    pageItemImageObjectY1: "9.75",
    pageItemImageObjectX1: "4.25",
    pageItemImageObjectY2: "139.187",
    pageItemImageObjectX2: "133.75",
    pageItemTitleObjectY1: "141.35",
    pageItemTitleObjectX1: "4",
    pageItemTitleObjectY2: "148.75",
    pageItemTitleObjectX2: "133.75",
    pageItemDateObjectY1: "149.5",
    pageItemDateObjectX1: "4.499",
    pageItemDateObjectY2: "152.5",
    pageItemDateObjectX2: "70.375",
    pageItemDetailObjectY1: "153.75",
    pageItemDetailObjectX1: "4.25",
    pageItemDetailObjectY2: "205.75",
    pageItemDetailObjectX2: "133.7",
    pageItemAuthorObjectY1: "149.5",
    pageItemAuthorObjectX1: "20",
    pageItemAuthorObjectY2: "152.95",
    pageItemAuthorObjectX2: "70.875"
};


var pageRight = {
    pageItemPageNumberRightY1: "4.5",
    pageItemPageNumberRightX1: "136.15",
    pageItemPageNumberRightY2: "9.5",
    pageItemPageNumberRightX2: "143.85",
    pageItemBookTitleRightObjectY1: "2.75",
    pageItemBookTitleRightObjectX1: "8.3",
    pageItemBookTitleRightObjectY2: "7.75",
    pageItemBookTitleRightObjectX2: "136.15",
    pageItemImageObjectY1: "9.5",
    pageItemImageObjectX1: "14.25",
    pageItemImageObjectY2: "138.937",
    pageItemImageObjectX2: "143.75",
    pageItemTitleObjectY1: "141.35",
    pageItemTitleObjectX1: "14.25",
    pageItemTitleObjectY2: "148.75",
    pageItemTitleObjectX2: "144",
    pageItemDateObjectY1: "149.5",
    pageItemDateObjectX1: "14.687",
    pageItemDateObjectY2: "152.5",
    pageItemDateObjectX2: "80.813",
    pageItemDetailObjectY1: "153.75",
    pageItemDetailObjectX1: "14.3",
    pageItemDetailObjectY2: "205.75",
    pageItemDetailObjectX2: "143.75",
    pageItemAuthorObjectY1: "149.55",
    pageItemAuthorObjectX1: "30",
    pageItemAuthorObjectY2: "153.25",
    pageItemAuthorObjectX2: "81.075"
};



// Create pages
for (i = 0; i < bookData.pages.length; i++){
    myPages.add(); // create a new page
    pageItemPositionCurrent = 1 + i;
    pageItemCurrentObject = currentDoc.pages[pageItemPositionCurrent];


    // Set path
    bookDataFilePath = bookDataFile.path.replace(/~/, "Macintosh HD/Users/shota");
    root = bookDataFilePath + "/img/";
    rootPage = root + "pages/" + bookData.pages[i].pageId;
    pageItemImagePath = {
        bookTitleLeft: root + "bookTitleForPage_Left.png",
        bookTitleRight: root + "bookTitleForPage_Right.png",
        image: bookAssetsPath + bookData.pages[i].pageId + ".jpg",
        title: rootPage + "/title.png",
        detail: rootPage + "/description.png"
    };


    // Create each objects
    pageItemImageObject = pageItemCurrentObject.textFrames.add();

    if (flags.pageTitle === true){
        pageItemTitleObject = pageItemCurrentObject.textFrames.add();
        pageItemDateObject = pageItemCurrentObject.textFrames.add();
    }

    if (flags.pageDescription === true){
        pageItemDetailObject = pageItemCurrentObject.textFrames.add();
    }


    // Add page author object
    if (bookData.contributors.length != 0) {
        pageItemAuthorObject = pageItemCurrentObject.textFrames.add();
    }


    if (i % 2 === 0){ // Even pages a.k.a. page on your left hand


        // Set margins
        with (myDocument.pages[pageItemPositionCurrent].marginPreferences){
            columnDirection = HorizontalOrVertical.HORIZONTAL;
            columnCount = 2;
            columnGutter = "3.25mm";
            bottom = "4.25mm";
            left = "4.25mm";
            right = "8.25mm";
            top = "4.25mm";
        }

        // Create objects
        pageItemPageNumberLeft = pageItemCurrentObject.textFrames.add();
        pageItemBookTitleLeftObject = pageItemCurrentObject.textFrames.add();



        pageItemPageNumberLeft.visibleBounds = [pageLeft.pageItemPageNumberLeftY1, pageLeft.pageItemPageNumberLeftX1, pageLeft.pageItemPageNumberLeftY2, pageLeft.pageItemPageNumberLeftX2];
        pageItemBookTitleLeftObject.visibleBounds = [pageLeft.pageItemBookTitleLeftObjectY1, pageLeft.pageItemBookTitleLeftObjectX1, pageLeft.pageItemBookTitleLeftObjectY2, pageLeft.pageItemBookTitleLeftObjectX2];
        pageItemImageObject.visibleBounds = [pageLeft.pageItemImageObjectY1, pageLeft.pageItemImageObjectX1, pageLeft.pageItemImageObjectY2, pageLeft.pageItemImageObjectX2];

        if (flags.pageTitle === true){
            pageItemTitleObject.visibleBounds = [pageLeft.pageItemTitleObjectY1, pageLeft.pageItemTitleObjectX1, pageLeft.pageItemTitleObjectY2, pageLeft.pageItemTitleObjectX2];
            pageItemDateObject.visibleBounds = [pageLeft.pageItemDateObjectY1, pageLeft.pageItemDateObjectX1, pageLeft.pageItemDateObjectY2, pageLeft.pageItemDateObjectX2];

            if (flags.pageDescription === true){
                pageItemDetailObject.visibleBounds = [pageLeft.pageItemDetailObjectY1, pageLeft.pageItemDetailObjectX1, pageLeft.pageItemDetailObjectY2, pageLeft.pageItemDetailObjectX2];
            }

            if (bookData.contributors.length != 0) {
                pageItemAuthorObject.visibleBounds = [pageLeft.pageItemAuthorObjectY1, pageLeft.pageItemAuthorObjectX1, pageLeft.pageItemAuthorObjectY2, pageLeft.pageItemAuthorObjectX2];
            }
        }

        // Set page number for Left Page
        pageItemPageNumberLeft.contents = (i + 1).toString(); // because its starts from zero
        pageItemPageNumberLeft.paragraphs[0].justification = Justification.leftAlign;
        pageItemPageNumberLeft.paragraphs[0].pointSize = "10Q";
        pageItemPageNumberLeft.paragraphs[0].appliedFont = fontGennokakuGothic;
        pageItemPageNumberLeft.paragraphs[0].fontStyle = "Regular";

        // Place page book title left
        pageItemBookTitleLeftObject.contentType = ContentType.graphicType;
        pageItemBookTitleLeftObject.place(pageItemImagePath.bookTitleLeft);
        pageItemBookTitleLeftObject.fit(FitOptions.proportionally);



    } else { // Odd pages a.k.a. page on your right hand


        // Set margins
        with (myDocument.pages[pageItemPositionCurrent].marginPreferences){
            columnDirection = HorizontalOrVertical.HORIZONTAL;
            columnCount = 2;
            columnGutter = "3.25mm";
            bottom = "4.25mm";
            left = "8.25mm";
            right = "4.25mm";
            top = "4.25mm";
        }

        // Create objects
        pageItemPageNumberRight = pageItemCurrentObject.textFrames.add();
        pageItemBookTitleRightObject = pageItemCurrentObject.textFrames.add();

        pageItemPageNumberRight.visibleBounds = [pageRight.pageItemPageNumberRightY1, pageRight.pageItemPageNumberRightX1, pageRight.pageItemPageNumberRightY2, pageRight.pageItemPageNumberRightX2];
        pageItemBookTitleRightObject.visibleBounds = [pageRight.pageItemBookTitleRightObjectY1, pageRight.pageItemBookTitleRightObjectX1, pageRight.pageItemBookTitleRightObjectY2, pageRight.pageItemBookTitleRightObjectX2];
        pageItemImageObject.visibleBounds = [pageRight.pageItemImageObjectY1, pageRight.pageItemImageObjectX1, pageRight.pageItemImageObjectY2, pageRight.pageItemImageObjectX2];

        if (flags.pageTitle === true){
            pageItemTitleObject.visibleBounds = [pageRight.pageItemTitleObjectY1, pageRight.pageItemTitleObjectX1, pageRight.pageItemTitleObjectY2, pageRight.pageItemTitleObjectX2];
            pageItemDateObject.visibleBounds = [pageRight.pageItemDateObjectY1, pageRight.pageItemDateObjectX1, pageRight.pageItemDateObjectY2, pageRight.pageItemDateObjectX2];

            if (flags.pageDescription === true){
                pageItemDetailObject.visibleBounds = [pageRight.pageItemDetailObjectY1, pageRight.pageItemDetailObjectX1, pageRight.pageItemDetailObjectY2, pageRight.pageItemDetailObjectX2];
            }

            if (bookData.contributors.length != 0) {
                pageItemAuthorObject.visibleBounds = [pageRight.pageItemAuthorObjectY1, pageRight.pageItemAuthorObjectX1, pageRight.pageItemAuthorObjectY2, pageRight.pageItemAuthorObjectX2];
            }
        }


        // Creat page number for right page
        pageItemPageNumberRight.contents = (i + 1).toString();
        pageItemPageNumberRight.paragraphs[0].justification = Justification.rightAlign;
        pageItemPageNumberRight.paragraphs[0].pointSize = "10Q";
        pageItemPageNumberRight.paragraphs[0].appliedFont = fontGennokakuGothic;
        pageItemPageNumberRight.paragraphs[0].fontStyle = "Regular";

        // Place page book title right
        pageItemBookTitleRightObject.contentType = ContentType.graphicType;
        pageItemBookTitleRightObject.place(pageItemImagePath.bookTitleRight);
        pageItemBookTitleRightObject.fit(FitOptions.proportionally);

    }





    // Place page image
    pageItemImageObject.contentType = ContentType.graphicType;
    pageItemImageObject.place(pageItemImagePath.image);
    pageItemImageObject.fit(FitOptions.proportionally);


    if (flags.pageTitle === true){

        // Place page title
        pageItemTitleObject.contentType = ContentType.graphicType;
        pageItemTitleObject.place(pageItemImagePath.title);
        pageItemTitleObject.fit(FitOptions.proportionally);

        // Place page date
        // setColor = [0, 0, 0, 50];
        // colorGray = pageItemDateObject.colors.add({model:ColorModel.process,space:ColorSpace.cmyk,colorValue:setColor});
        // pageItemDateObject.characters[0].fillColor = colorGray;
        pageItemDateObject.contents = bookData.pages[i].userDefinedDate;
        pageItemDateObject.paragraphs[0].justification = Justification.leftAlign;
        pageItemDateObject.paragraphs[0].pointSize = "10Q";
        pageItemDateObject.paragraphs[0].appliedFont = fontGennokakuGothic;
        pageItemDateObject.paragraphs[0].fontStyle = "Regular";

        // If the book is contributor book,
        // place page owner name. (won’t show up author name if its single owner.)
        if (bookData.contributors.length != 0) {
            if (bookData.pages[i].owner){
                pageItemAuthorObject.contents = "Written by " + bookData.pages[i].owner.name;
            } else {
                pageItemAuthorObject.contents = "Written by " + bookData.owner.name;
            }
            pageItemAuthorObject.paragraphs[0].justification = Justification.leftAlign;
            pageItemAuthorObject.paragraphs[0].appliedFont = fontGennokakuGothic;
            pageItemAuthorObject.paragraphs[0].leading = "3.25mm";
            pageItemAuthorObject.paragraphs[0].fontStyle = "Regular";
            pageItemAuthorObject.paragraphs[0].pointSize = "10Q";
        }

        if (flags.pageDescription === true){

            // Place page detail
            if (bookData.pages[i].description) {

                checkExistsDetail = new File(pageItemImagePath.detail);
                // checkExistsDetail = new File(pageItemImagePath.detail);
                // if detail on the  exists or not
                if (checkExistsDetail.exists) {
                    pageItemDetailObject.contentType = ContentType.graphicType;
                    pageItemDetailObject.place(pageItemImagePath.detail);
                    pageItemDetailObject.fit(FitOptions.proportionally);

                    // // if detail on the  exists or not
                    // if (checkExistsDetail.exists) {
                    //     pageItemDetailObject.contentType = ContentType.graphicType;
                    //     pageItemDetailObject.place(pageItemImagePath.detail);
                    //     pageItemDetailObject.fit(FitOptions.proportionally);
                    // }
                }
            }
        }
    }
}





